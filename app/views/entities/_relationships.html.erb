<div id="relationship_tabs_content">

  <%# The 'regular' profile page %>
  <% if params[:relationships] == nil %>

    <% if @entity.links.count.zero? %>
      <%= render partial: 'no_relationships' %>
    <% else %>
      <% cache_unless (user_admin? ||  @entity.updated_at > 2.minutes.ago), ['relationship_page', @entity.cache_key_with_version] do %>
        <% @links = SortedLinks.new(@entity) %>
        <% section_order(@entity).each do |section| %>
	  <% links_group = @links.send(section) %>
	  <%= section_heading(links_group) %>
	  <%= link_to_all(@entity, links_group) %>
	  <div>
	    <%= render partial: 'link', collection: links_group.links.take(10) %>
	  </div>
        <% end %>
      <% end # end cache %>
    <% end %>

    <%# The profile page for a specific type of relationship %>

  <% elsif section_order(@entity).include? params[:relationships] %>

    <% page = params[:page].blank? ? 1 : params[:page] %>

    <% cache_unless (user_admin? ||  @entity.updated_at > 2.minutes.ago), ['relationship_page', @entity.cache_key_with_version, params[:relationships], page] do %>
      <% @links = SortedLinks.new(@entity, params[:relationships], page) %>
      <% links_group = @links.send(params[:relationships]) %>
      <%= section_heading(links_group) %>
      <% paginatable_links = Kaminari.paginate_array(links_group.links, total_count: links_group.count).page(page).per(20) %>
      <% raise ActiveRecord::RecordNotFound unless paginatable_links.count > 0 %>
      <%= paginate paginatable_links %>
      <div class="relationship-links">
        <%= render partial: 'link', collection: paginatable_links %>
      </div>

      <%= paginate paginatable_links %>

    <% end %>
  <% end %>
</div>
