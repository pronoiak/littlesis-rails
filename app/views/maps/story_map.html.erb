<% content_for(:page_title, raw(@map.name)) %>
<% content_for(:facebook_title, @map.name) %>
<% content_for(:facebook_image, @map.thumbnail) %>
<% content_for(:facebook_type, "website") %>
<% content_for(:facebook_url, map_url(@map)) %>

<%= content_for(:head) do %>
  <%= oligrapher_js_tags %>
<% end %>


<% if @map.oligrapher_version == 2 && user_signed_in? %>
  <% content_for(:navbar_notice) do %>
    <%= render partial: 'oligrapher_update' %>
  <% end %>
<% end %>

<%= content_for(:body) do %>

<%= cache_if @cacheable, @map do %>

<div id="oligrapher"></div>

<div id="oligrapherModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm">
	<div class="modal-content">
	    <div class="modal-body">
		<button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
		<div class="modal-body-text"></div>
	    </div>
	</div>
    </div>
</div>

<%= render partial: 'disclaimer_modal' %>

<div id="embed-code">
    Width <input type="text" id="embed-width" value="600">&nbsp;&nbsp;
    Height <input type="text" id="embed-height" value="700">&nbsp;&nbsp;
    <textarea><iframe height="600" width="700" scrolling="no" style="border: 0px; overflow: hidden;" src="<%= embedded_v2_map_url(@map) %>"></iframe></textarea>
</div>

<% if @editable %>
    <% if @map.persisted? %>
	<%= button_to("Delete", map_path(@map), method: :delete, id: "oligrapherDeleteButton", class: "btn btn-sm btn-danger", data: { confirm: "Are you sure you want to delete this map?" }) %>
    <% else %>
	<%= link_to("Cancel", maps_path, id: "oligrapherCancelButton", class: "btn btn-sm btn-danger", data: { confirm: "Are you sure you want to discard this map?" }) %>
    <% end %>
<% end %>

<script>
 <% if @map.persisted? %>
 var graph = <%= raw(@map.graph_data.to_json) %>;
 graph.id = <%= @map.id %>;
 <% else %>
 var graph = null;
 <% end %>

 <% if @map.annotations_data %>
 <% if @editable %>
 var annotations = <%= raw(@map.annotations_data) %>;
 <% else %>
 var annotations = <%= raw(@map.annotations_data_with_sources) %>;
 <% end %>
 <% else %>
 var annotations = [];
 <% end %>

 var startIndex = <%= params.fetch(:slide, 1).to_i - 1 %>;
 var currentIndex = startIndex;

 var root = document.getElementById('oligrapher');
 root.style.height = window.innerHeight - 170 + "px";

 var saveData = function(data) {
     if (!data.title) {
	 $('#oligrapherModal .modal-body-text').text("You must give the map a title!");
	 $('#oligrapherModal').modal();
	 return;
     }

     var annotations = data.annotations.filter(function(annotation) {
	 return annotation.id != 'sources';
     });

     $.ajax({
	 url: "<%= @map.id ? map_url(@map) : maps_path %>",
	 type: "<%= @map.id ? 'PATCH' : 'POST' %>",
	 data: {
             graph_data: JSON.stringify(data.graph),
             annotations_data: JSON.stringify(annotations),
             annotations_count: annotations.length,
             title: data.title,
             is_private: data.settings.is_private,
	     is_cloneable: data.settings.is_cloneable,
             list_sources: data.settings.list_sources
	 },
	 success: function(data) {
             $('#oligrapherModal .modal-body-text').text("Map successfully saved");
             $('#oligrapherModal').modal();
             <% if !@map.persisted? %>
             window.location.href = "<%= map_url(id: 'ZZZ') %>".replace(/ZZZ/, data.id);
             <% end %>
	 },
	 error: function(req, str) {
             alert("There was an error saving the map: " + str);
	 },
	 dataType: "json"
     })
 };


 var mapTitle = <%= raw(@map.display_title(lock: !@editable)) %>;

 var oli = new Oligrapher({
     root: root,
     data: {
	 title: mapTitle,
	 graph: graph,
	 annotations: annotations
     },
     user: { name: "<%= @map.user.username %>", url: "https://littlesis.org<%= user_page_path(@map.user) %>" },
     date: '<%= @map.created_at ? @map.created_at.strftime("%B %-d, %Y") : nil %>',
     startIndex: startIndex,
     isEditor: <%= @editable.to_s %>,
     isLocked: <%= (!@editable).to_s %>,
     dataSource: LsDataSource({ "baseUrl": "<%= NetworkMap::LS_DATA_SOURCE_BASE_URL %>" }),
     showSaveButton: true,
     links: <%= raw(JSON.dump(@links || [])) %>,
     settings: {
	 is_private: <%= @map.is_private.to_s %>,
	 is_cloneable: <%= @map.is_cloneable.to_s %>,
	 list_sources: <%= @map.list_sources.to_s %>
     },
     onSave: saveData,
     onNav: updateUrl,
     viewOnlyHighlighted: <%= (!@editable).to_s %>
 });

 $('#oligrapherEmbedLink').click(function(e) {
     var text = $('#embed-code textarea').val();
     var left = this.offsetLeft + "px";
     var top = ($(this).offset().top + 10) + "px";
     $('#embed-code').css('left', left);
     $('#embed-code').css('top', top);
     $('#embed-code textarea').val(text);
     $('#embed-code').toggle();
     $('#embed-code textarea').focus();
 });

 $("#embed-code textarea").focus(function() {
     var $this = $(this);
     $this.select();

     // Work around Chrome's little problem
     $this.mouseup(function() {
         // Prevent further mouseup intervention
         $this.unbind("mouseup");
         return false;
     });
 });

 $('#embed-width').on('input', function(){
     var text = $('#embed-code textarea').val();
     text = text.replace(/width="\d*"/, 'width="' + this.value + '"');
     $('#embed-code textarea').val(text);
 });

 $('#embed-height').on('input', function(){
     var text = $('#embed-code textarea').val();
     text = text.replace(/height="\d*"/, 'height="' + this.value + '"');
     $('#embed-code textarea').val(text);
 });

 $('#embed-zoom').on('input', function(){
     var text = $('#embed-code textarea').val();
     text = text.replace(/zoom=[^"]*/, "zoom=" + this.value);
     $('#embed-code textarea').val(text);
 });

 function showAnnotation(index) {
     currentIndex = event.state.index;
     oli.showAnnotation(index);
 }

 function updateUrl(index) {
     // do nothing if update is triggered by showAnnotation,
     // in which case index will be the same as before
     if (index == currentIndex) {
	 return;
     }

     var num = (index + 1).toString();
     var currentUrl = window.location.toString();
     var url = currentUrl.replace(/\/maps\/([^\/]+).*$/, '/maps/$1/' + (num == 1 ? '' : num));
     currentIndex = index;

     if (typeof (history.pushState) != "undefined") {
	 var obj = { title: document.title, url: url, index: index };
	 history.pushState(obj, obj.title, obj.url);
     }
 }

 window.onpopstate = function(event) {
     if (event.state && typeof(event.state.index) !== 'undefined') {
	 // don't push state again
	 showAnnotation(event.state.index);
     } else {
	 // window.location.href = window.location.toString();
     }
 };

 if (typeof (history.replaceState) !== "undefined") {
     var obj = { title: document.title, url: window.location.toString(), index: currentIndex };
     history.replaceState(obj, obj.title, obj.url);
 }
</script>

<% end %>
<% end %>
