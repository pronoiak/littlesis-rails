<% content_for(:page_title, 'API') %>
<style>
 table th.content, table td.content {
     width: 100%;
 }
</style>

<div class="row">
  <div class="col-md-10">
    <h1>LittleSis Api Documentation - Version 2</h1>
  </div>
</div>

<div class="row">
  <%= api_column do %>
    <h2>Responses</h2>
    <p>The API follows many of the conventions of <%= link_to 'JSON API', 'http://jsonapi.org/' %>, but does not implement the entire specification.</p>
    <p>All responses are in JSON.</p>
  <% end %>
  <div class="col-md-8">
    <h3>Successful Responses</h3>
    <p>For singular resources, this will return an object with two fields: data and meta. The meta object contains copyright, license, api version, and other similar information. The data object will have four fields: <em>type</em>, <em>id</em>, <em>attributes</em>, and <em>links</em>. </p>
    <p><em>Type</em> is the type of resource requested: (i.e. entities). <em>Id</em> is the resource's id. <em>Attributes</em> contain the resource attributes. <em>Links</em> contain at least one link to LittleSis where the resource can be viewed.</p>
    <p><strong>Structure of response:</strong></p>
    <pre><code>
{
  data: {
          type: 'resourceType'
          id: '123'
          attributes: { ... }
          links: {
            self: '/link/to/resource'
          }
        },
   meta: { ... }
}
    </code></pre>

    <p>All successful responses will return status code <code>200</code></p>
  </div>

  <div class="col-md-12">
    <h3>Errors</h3>
    <p>If an error occurs, the API will return json containing information about the error along with an error status code. </p>
    <h4>Structure of an error response: </h4>
    <pre><code>
{
  errors: [ {title: 'Details here about the error'} ],
  meta: { ... }
}
    </code></pre>
  </div>

  <%= api_column do %>
    <h4>Error Status Codes</h4>
    <table class="table">
      <thead>
	<tr>
	  <th>Status Code</th>
	  <th class="content">Meaning</th>
	</tr>
      </thead>
      <tbody>
	<tr>
	  <td>400</td>
	  <td class="content">Missing required param</td>
	</tr>
	<tr>
	  <td>404</td>
	  <td class="content">Resource is missing or never existed</td>
	</tr>
	<tr>
	  <td>410</td>
	  <td class="content">Resource has been deleted (but once existed)</td>
	</tr>
        <tr>
	  <td>503</td>
	  <td class="content">Rate Limit Exceeded</td>
	</tr>
      </tbody>
    </table>
  <% end %>
</div>


<div class="row">
  <%= api_column do %>
    <h2>Entity Resources</h2>
  <% end %>

  <%= api_column do %>
    <h3><code>/api/entities/:id</code></h3>
    <p>This provides basic information about an entity: </p>
    <ul>
      <%= attribute_line('id', 'Unique numerical ID for entity in LittleSis database.') %>
      <%= attribute_line('name', 'The primary alias (not necessarily unique) of the Entity in LittleSis') %>
      <%= attribute_line('blurb', 'A short phrase or sentence describing the Entity') %>
      <%= attribute_line('primary_ext', '"Person" or "Org"') %>
      <%= attribute_line('summary', 'A longer bio or summary of the Entity') %>
      <%= attribute_line('website', "The Entity's website") %>
      <%= attribute_line('start_date', "The date when the Entity came to exist -- DOB for people, founding dates for orgs") %>
      <%= attribute_line('end_date', "The date, if any, when the Entity ceased to exist") %>
      <%= attribute_line('parent_id', "If the Entity is a sub-organization of a parent Entity, the parent's id is stored here") %>
      <%= attribute_line('updated_at', 'The last time the Entity data was updated') %>
      <%= attribute_line('types', 'An array of types (also known as extensions) associated with the entity. i.e. Business, Lawyer') %>
      <%= attribute_line('aliases', 'An array of other names the entity is known as') %>
    </ul>
  <% end %>

  <%= api_column do %>
    <%= api_title_route('Entity Extension', '/api/entities/:id/extensions') %>
    <p>Extensions are also known as types. All entities have at least one type -- <em>Organization</em> or <em>Person</em>. Other types include: Business Person, Public Company, Political Candidate, and Professional Associations.</p>

    <p>Example request: <code>curl https://littlesis.org/api/entities/1/extensions</code></p>
    <pre><code>
{
  "data": [
    {
      "type": "extension-records",
      "id": 1,
      "attributes": {
        "id": 1,
        "definition_id": 2,
        "display_name": "Organization",
        "name": "Org"
      }
    },
    {
      "type": "extension-records",
      "id": 2,
      "attributes": {
        "id": 2,
        "definition_id": 5,
        "display_name": "Business",
        "name": "Business"
      }
    },
    {
      "type": "extension-records",
      "id": 3,
      "attributes": {
        "id": 3,
        "definition_id": 13,
        "display_name": "Public Company",
        "name": "PublicCompany"
      }
    }
  ],
  "meta": {...}
}
    </code></pre>


    <p> add <code>details=TRUE</code> to include additional information that's contained within the extension (not all extensions have additional fields)</p>
  <% end %>

  <%= api_column do %>
    <%= api_title_route('Entity Relationships', '/api/entities/:id/relationships') %>
    <p>Relationships this entity has with other entities. The key "data" contains an array of Relationship elements. These requests can also be paginated.</p>
    <p>You can find limit the relationships to specific category by including the param "category_id".</p>
  <% end %>

  <%= api_column do %>
    <%= api_title_route('Entity Connections', '/api/entities/:id/connections') %>
    <p>Other entities that this entity has a relationship with. The key "data" contains an array of Entity elements. This route accepts the params "category_id" which will only limit connections to those entities that are connected with a relationship of the provided category. The results are sorted by the connected entity <em>link_count</em></p>.
    <p>The entity attributes object contains two additional fields -- relationship_id and relationship_category_id</p>
  <% end %>

  <%= api_column do %>
    <%= api_title_route('Entity Lists', '/api/entities/:id/lists') %>
    <p>The lists that the entity is on</p>

    <p>Example request: <code>curl https://littlesis.org/api/entities/10/lists</code></p>
    <pre><code>
{
  "meta": {
    "copyright": "LittleSis CC BY-SA 3.0",
    "license": "https://creativecommons.org/licenses/by-sa/3.0/us/",
    "apiVersion": "2.0"
  },
  "data": [
    {
      "type": "lists",
      "id": 1,
      "attributes": {
        "id": 1,
        "name": "Fortune 1000 Companies (2008)",
        "description": "Fortune Magazine's list of the 1000 US companies with the largest published revenue figures.",
        "is_ranked": true,
        "is_featured": false,
        "updated_at": "2017-02-01T15:46:35Z",
        "short_description": null,
        "entity_count": 1000
      },
      "links": {
        "self": "https://littlesis.org/lists/1-fortune-1000-companies-2008"
      }
    },
    {
      "type": "lists",
      "id": 291,
      "attributes": {
        "id": 291,
        "name": "Top Lobbying Clients in New York State in 2011",
        "description": "\"In 2011, 2,776 unique groups spent money lobbying in New York. The chart found from pages 2 through 97 of this report ranks each of them and compares their spending to 2010 levels.\"\r\n\r\n-NYPIRG, April 5, 2012",
        "is_ranked": true,
        "is_featured": false,
        "updated_at": "2017-04-27T01:33:39Z",
        "short_description": null,
        "entity_count": 96
      },
      "links": {
        "self": "https://littlesis.org/lists/291-top-lobbying-clients-in-new-york-state-in-2011"
      }
    }
  ]
}
    </code></pre>
  <% end %>


  <%= api_column do %>
    <%= api_title_route('Search by name', '/api/entities/search?q=NAME') %>
  <% end %>

  <div class="col-md-10 col-sm-12"
    <p>This searches our database for entities. The number of the relationships the entity has is used in the ranking algorithm. For instance, searching for 'Bush' will put <%= link_to 'George Bush', concretize_entity_path(Entity.find(28776)) %> before <%= link_to 'Jeb Bush', concretize_entity_path(Entity.find(34003)) %> because the former has more relationships in our database than the latter.</p>


    <p>Example response:</p>
    <pre><code>
{
    "data": [
	{
	  // entity objects are identical to those returned by the /api/entities/:id route
	},
    ],

    "meta": {
	"currentPage": 1,
	"pageCount": 3,
	"copyright": "LittleSis CC BY-SA 3.0",
	"license": "https://creativecommons.org/licenses/by-sa/3.0/us/",
	"apiVersion": "2.0"
    }
}

    </code></pre>

    <p>It will return at most <strong>10</strong> entities at a time. If there are more than 10 results, you can request additional pages by including the param page (<code>page=NUMBER</code>) to the request. Leaving out the param page is the same as requesting page 1</p>

    <%= api_column do %>
      <h4>optional parameters</h4>
      <ul>
        <li><strong>regions</strong> (<code>regions=3</code>) filters search search by region</li>
        <li><strong>tags</strong> (<code>regions=oil</code>) fitlers search results by tags</li>
      </ul>
    <% end %>


  </div>
</div>

<div class="row">
  <%= api_column do %>
    <%= api_title_route('Relationships', '/api/relationships/:id') %>
    <p>This provides basic information about a relationship: </p>
    <ul>
      <%= attribute_line('id', 'Unique numerical ID for relationship in LittleSis database.') %>
      <%= attribute_line('description', 'A sentence describing the relationship') %>
      <%= attribute_line('category_id', 'Integer between 1 and 12, representing the relationship category') %>
      <%= attribute_line('category_name', 'The category of the relationship') %>
      <%= attribute_line('description1', 'Often the "title", but the precise meaning varies by relationship category') %>
      <%= attribute_line('description2', '') %>
      <%= attribute_line('amount', 'Amount of the transaction or donation') %>
      <%= attribute_line('goods', 'goods provided') %>
      <%= attribute_line('start_date', "The date when the relationship started") %>
      <%= attribute_line('end_date', "The date when the relationship ended") %>
      <%= attribute_line('is_current', "If the relationship is ongoing. (null = unknown)") %>
      <%= attribute_line('entity1_id', "ID of the first entity in the relationship") %>
      <%= attribute_line('entity2_id', "ID of the second entity in the relationship") %>
    </ul>
  <% end %>

  <%= api_column do %>
    <p>The response object also includes information on the two entities in the relationship under the key <em>'included'</em></p>

    <p>Example request: <code>curl https://littlesis.org/api/relationships/297069</code></p>
    <pre><code>
{
  "meta": {
    "copyright": "LittleSis CC BY-SA 3.0",
    "license": "https://creativecommons.org/licenses/by-sa/3.0/us/",
    "apiVersion": "2.0"
  },
  "data": {
    "type": "relationships",
    "id": 297069,
    "attributes": {
      "id": 297069,
      "entity1_id": 72489,
      "entity2_id": 28778,
      "category_id": 5,
      "description1": "Campaign Contribution",
      "description2": "Campaign Contribution",
      "amount": 631700,
      "goods": null,
      "filings": 16,
      "updated_at": "2017-07-25T18:18:13Z",
      "start_date": "2004-00-00",
      "end_date": "2016-04-25",
      "is_current": null,
      "description": "Robert Mercer gave money to  Republican National Committee"
    },
    "links": {
      "self": "https://littlesis.org/relationships/297069"
    }
  },
  "included": [
    {
      "type": "entities",
      "id": 72489,
      "attributes": {
        "id": 72489,
        "name": "Robert Mercer",
        "blurb": "Renaissance Tech billionaire, Club for Growth backer",
        "summary": "Robert Mercer, 65, is co-CEO of Renaissance Technologies LLC, a $15 billion hedge fund. The IBM language-recognition whiz-turned-financier brought home $125 million in 2011, making him the 16th highest-earning hedge fund manager, according to Forbes.\r\n\r\nRenaissance Technologies is based in New York City, with additional locations in London and East Setauket, N.Y., where Mercer lives.",
        "website": null,
        "parent_id": null,
        "primary_ext": "Person",
        "updated_at": "2017-09-11T21:48:02Z",
        "start_date": null,
        "end_date": null,
        "aliases": [
          "Robert Mercer"
        ],
        "types": [
          "Person",
          "Business Person"
        ]
      },
      "links": {
        "self": "https://littlesis.org/entities/72489-Robert_Mercer"
      }
    },
    {
      "type": "entities",
      "id": 28778,
      "attributes": {
        "id": 28778,
        "name": "Republican National Committee",
        "blurb": "The Grand Ol' Party",
        "summary": null,
        "website": null,
        "parent_id": null,
        "primary_ext": "Org",
        "updated_at": "2017-10-09T01:09:46Z",
        "start_date": null,
        "end_date": null,
        "aliases": [
          "Republican National Committee",
          "RNC"
        ],
        "types": [
          "Organization",
          "Political Fundraising Committee",
          "Other Campaign Committee"
        ]
      },
      "links": {
        "self": "https://littlesis.org/entities/28778-Republican_National_Committee"
      }
    }
  ]
}
    </pre></code>

  <% end %>

</div>
