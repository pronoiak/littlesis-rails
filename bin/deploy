#!/bin/bash
set -e

if ! test $USER = littlesis
then
    echo "Deploy must be run as the user 'littlesis'" >&2
    exit 1
fi

export RAILS_ENV=production

cd /var/www/littlesis

git remote update

REMOTE_COMMIT=$(git rev-parse origin/master)
LOCAL_COMMIT=$(git rev-parse @)

if test $REMOTE_COMMIT = $LOCAL_COMMIT
then
    echo "No upstream changes"
    exit 0
fi

git checkout -- .
git pull origin master


git_files_changed () {
    git diff --name-only $REMOTE_COMMIT $LOCAL_COMMIT | grep -q "$1"
}

if git_files_changed 'db/migrate'
then
    cat << EOF
+-----------------------------------------------------------+
  These changes likely require a database update,
  which will NOT happen automatically by this script.
  To perform a migration run: "bundle exec rake db:migrate"
+-----------------------------------------------------------+
EOF
fi

if git_files_changed 'Gemfile'
then
    echo "Installing new gems"
    bundle install
fi

if git_files_changed 'yarn.lock'
then
    echo 'Updating javascripting packages'
    bin/yarn
fi

if git_files_changed 'assets' || git_files_changed 'packs' || git_files_changed 'yarn.lock'
then
    echo "Precompiling assets"
    bundle exec rake assets:precompile
fi

if git_files_changed 'oligrapher.rb'
then
    echo 'Running OligrapherAssetsService'
    bundle exec rails runner 'OligrapherAssetsService.new.run'
fi

echo "Restarting delayed job"
bin/delayed_job -n 2 restart

echo "Restarting LittleSis"
bundle exec pumactl -P tmp/puma.pid phased-restart
