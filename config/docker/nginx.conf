user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  # compression
  gzip              on;
  gzip_static       on;

  limit_req_zone $binary_remote_addr zone=api:5m rate=2r/s;

  upstream app {
    server app:8080;
  }

  server {
    listen 80;
    server_name littlesis.local localhost;
    root /littlesis/public;

    proxy_max_temp_file_size 256M;

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_pass http://app;
    }

    location /cable {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_pass http://app;
    }

    location /api {
      limit_req zone=api burst=10 nodelay;

      # our API only accepts GET requests
      if ($request_method != 'GET') {
        return 405;
      }

      expires 120s;
      add_header Cache-Control "public";
      add_header 'Access-Control-Allow-Origin' *;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_pass http://app;
    }

    # # This enables CORS only for oligrapher API routes
    # location ~ ^/(maps|oligrapher)/(find_nodes|find_connections|get_edges|node_with_edges|edges_with_nodes|interlocks)$ {
    #     if ($request_method = 'GET') {
    #         add_header 'Access-Control-Allow-Origin' '*';
    #         proxy_pass http://app;
    #     }
    # }

    location ~ ^/(title_extractor|dataurl)/.*$ {
      # expires 120s;
      # Use Docker's DNS and prevent nginx from crashing when service is not running
      # See https://stackoverflow.com/questions/32845674/setup-nginx-not-to-crash-if-host-in-upstream-is-not-found
      resolver 127.0.0.11 valid=30s;
      set $upstream_jsserver jsserver;

      proxy_set_header Host $http_host;
      proxy_set_header Connection "";
      proxy_pass http://$upstream_jsserver:8888/$uri;
      add_header 'Access-Control-Allow-Origin' *;
    }

    # Static image assets
    location ~* /images/(.+)\.(png|jpg|jpeg|avif|webp) {
      expires max;
      add_header Cache-Control "public";
      try_files $uri =404;
    }

    # Oligrapher screenshots
    # Cached for less time than regular images.
    location /images/oligrapher {
      expires 2h;
      add_header Cache-Control "public";
      try_files $uri =404;
    }

    # Compiled Oligrapher Assets
    location /oligrapher/assets/ {
      alias /littlesis/public/oligrapher/;
      expires max;
      add_header Cache-Control public;
      try_files $uri =404;
    }
  }
}
